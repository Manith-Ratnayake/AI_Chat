@rendermode InteractiveServer
@inject IJSRuntime JS
@inject ILocalStorageService localStorage
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject UserQuestions userquestionComponent
@using ChatBotWebApp.Components.Pages;
@inject Home homePage;

<div class="sideBar">


    <div class="sideBarTop">
        <img src="sideBar.png" class="sideBarIcon" @onclick="ToggleSideBar" />
        <img src="newChat.png" class="newChatIcon"  @onclick="NewChat"/>
    </div>



    @if (isSideBar)
    {

        <div class="sideBarPane">

            @if (chatStoredDataOnBrowser.Count > 0)


            {


                @foreach (var tab in chatStoredDataOnBrowser)
                {
                    string formattedValues = string.Join(", ", tab.Value);

                  
                    string first15Chars = formattedValues.Length > 15 ? formattedValues.Substring(0, 15) : formattedValues;
                    <div class="ChatLogName" @onclick="() => oldChatSelect(tab.Key)">@first15Chars</div>

                }

            }


            else
            {
                
            }

         </div>

        <div class="SettingsPopUp" @onclick="ToggleSettings">Settings</div>

   

    }
  
    
</div>

<script>
function getAllLocalStorageItems() {
    const items = { };  // Initialize an empty dictionary (object)

    for (let i = 0; i < localStorage.length; i++) {
            const key = localStorage.key(i);
    const value = localStorage.getItem(key);

    try {
                // Try parsing the value to see if it's a JSON array or object
                const parsedValue = JSON.parse(value);

    // If it's an array, keep it as is
    if (Array.isArray(parsedValue)) {
        items[key] = parsedValue;
                } else {
        // If it's not a list, wrap the parsed value in an array
        items[key] = [parsedValue];
                }
            } catch (e) {
        // If parsing fails (non-JSON), wrap the raw value in a lis
        items[key] = [value];
            }
        }
    console.log(items);
    return items;  // Return the dictionary with key-value pairs
    }




function getCurrentTabMessages(){

}

</script>