@page "/"
@inject IJSRuntime JSRuntime
@using FlintecChatBotApp.Components.Models;
@using System.Linq;
@inject IStringLocalizer<String> Localizer;




<div class="Header">
    <div class="ChatTabHeader">
        <button @onclick="() => Slider()">Slider</button>
        <button @onclick="() => CreateNewConversation()">New tab</button>
    </div>

    
    <div class="ChatMessageWindowHeader">Flintec</div>
</div>








<div class="Chat">



       @if (isSliderVisible){


        <div class="ChatTabs">

          @foreach (var conversation in userConversation.conversations)
         {
             string messageLine = "";

             foreach (var message in conversation)
             {
                 messageLine += message + " ";
             }

             <p>@messageLine</p>
     @*          <button @onclick="() => GetConversation(dict.listindex)">Get</button>
              <button @onclick="() => userConversation.DeleteConversation(dict.listindex)">Delete</button> *@
         
             }


            <button @onclick="ShowPopup">Open Popup</button>
            <Settings IsVisible="isPopupVisible" IsVisibleChanged="OnPopupVisibilityChanged" />



@* 
           @foreach (var dict in userConversation.conversations.Select((message, listindex) => new { message, listindex }))
           {
               <div>
                   <button @onclick="() => GetConversation(dict.listindex)">Get</button>
                   <button @onclick="() => userConversation.DeleteConversation(dict.listindex)">Delete</button>
                   <!-- <span>Conversation {dict.listindex}</span> -->
               </div>
           }  *@








    </div>


       }





    <div class="ChatWindow" style="background-color:red">




        <div class="DisplayMessageArea">
   


            @if (messages.Count > 0)
            {
                <p>No: @messages.Count</p>


                @foreach (var item in messages.Select((message, index) => new { message, index }))
                {
                    <p>@item.message</p>
                    <button @onclick="() => userConversation.EditMessage(item.index)">Edit</button>

 
                }
            }


            else
            {

                <p>@messages.Count()</p>
            }

        </div>
        


         <div class="inputArea" style="background-color:green">
            <div class="inputWrapper">
                <textarea type="text" id="auto-resize-textarea" class="inputBar" @bind="userQuestion" placeholder="Type your message here..." @onkeypress="EnterKeyPressed" />
                <button class="sendButton" @onclick="UserSubmitQuestion">Send</button>
            </div>

            <div class="contactTextContainer">
                <p class="contactText">@Localizer["For more details"]</p>
            </div>
        </div>


    </div>






</div>





@code {

    public bool isSliderVisible = true;

    public void Slider()
    {
            if (isSliderVisible == true)
                isSliderVisible = false;

            else
                isSliderVisible = true;
    }




    private bool isPopupVisible = false;

    private void ShowPopup()
    {
        isPopupVisible = true;
    }

    private void OnPopupVisibilityChanged(bool value)
    {
        isPopupVisible = value;
    }






}